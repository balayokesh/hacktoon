{"version":3,"sources":["assets/styles/style.js","assets/images/logo.png","Components/CardComponent.jsx","App.jsx","Game.jsx","index.js"],"names":["useStyles","makeStyles","Logo","width","marginRight","NavBar","marginBottom","backgroundColor","padding","Grid","display","Image","height","CardComponent","props","classes","item","xs","sm","md","Card","CardMedia","className","image","title","CardContent","Typography","CardActions","Button","variant","color","App","CssBaseline","AppBar","position","Toolbar","src","logo","alt","Container","container","spacing","align","to","Game","useState","openedCard","setOpenedCard","matched","setMatched","pokemons","id","name","pairOfPokemons","useEffect","firstMatched","secondMatched","length","setTimeout","map","pokemon","index","isFlipped","includes","onClick","opened","flipCard","Routing","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb490921.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles (() => ({\r\n    Logo: {\r\n        width: '55px',\r\n        marginRight: '2%',\r\n    },\r\n    NavBar: {\r\n        marginBottom: '2%',\r\n        backgroundColor: '#090b13',\r\n        padding: '2%',\r\n    },\r\n    Grid: {\r\n        display: 'flex',\r\n    },\r\n    Image: {\r\n        height: '400px',\r\n    }\r\n}));\r\n\r\nexport default useStyles;","export default __webpack_public_path__ + \"static/media/logo.c243e7e3.png\";","// Import Material-UI components\r\nimport { Grid, Card, CardMedia, CardContent, CardActions, Button, Typography } from '@material-ui/core';\r\n\r\n// Import assets\r\nimport useStyles from '../assets/styles/style';\r\n\r\nconst CardComponent = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={12} sm={6} md={4}>\r\n        <Card>\r\n            <CardMedia \r\n                className={classes.Image}\r\n                image={props.image}\r\n                title='Cartoon title'\r\n            />\r\n            <CardContent>\r\n                <Typography>\r\n                    {props.title}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='contained' color='primary'>\r\n                    Know more\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CardComponent;","// Import npm packages\r\nimport React, { useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Import Material-UI components\r\nimport { AppBar, Toolbar, CssBaseline, Container, Grid, Typography} from '@material-ui/core';\r\nimport useStyles from './assets/styles/style';\r\n\r\n// Import assets\r\nimport logo from './assets/images/logo.png'\r\n\r\n// Import custom components\r\nimport CardComponent from './Components/CardComponent.jsx';\r\n\r\nconst App = () => {\r\n\tconst classes = useStyles();\r\n    return (\r\n        <>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position='relative' className={classes.NavBar} >\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t<img src={logo} className={classes.Logo} alt='mickey logo' />\r\n\t\t\t\t<Typography variant='h3'>\r\n\t\t\t\t\tMickey-Hacktoon\r\n\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\r\n\t\t\t<main className=\"main_div\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Grid container spacing={4}>\r\n\t\t\t\t\t\t\t<CardComponent \r\n\t\t\t\t\t\t\t\timage='https://source.unsplash.com/random'\r\n\t\t\t\t\t\t\t\ttitle='test title'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<CardComponent \r\n\t\t\t\t\t\t\t\timage='https://source.unsplash.com/random'\r\n\t\t\t\t\t\t\t\ttitle='test title'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<CardComponent \r\n\t\t\t\t\t\t\t\timage='https://source.unsplash.com/random'\r\n\t\t\t\t\t\t\t\ttitle='test title'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Typography variant='h2' align='center'>\r\n\t\t\t\t\t\t\t<Link to='/game'>\r\n\t\t\t\t\t\t\t\tPlay game\r\n\t\t\t\t\t\t\t</Link>\t\t\t\t\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Typography variant='h2'>\r\n\t\t\t\t\t\t\tAbout Mickey Mouse:\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Typography variant='h2'>\r\n\t\t\t\t\t\t\tOur team - Mickey\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='subtitle1'>\r\n\t\t\t\t\t\t\tMonesh Goyal\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='subtitle1'>\r\n\t\t\t\t\t\t\tBala Yokesh Mani\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant='subtitle1'>\r\n\t\t\t\t\t\t\tCheng Yang\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\r\n\t\t\t<footer className=\"footer\">\r\n\t\t\t\t{/* To be filled later */}\r\n\t\t\t</footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","import React, { useEffect, useState } from \"react\";\r\nimport './assets/styles/cardStyle.css';\r\n\r\nconst url = \"https://pokeres.bastionbot.org/images/pokemon\";\r\n\r\nconst Game = () => {\r\n  const [openedCard, setOpenedCard] = useState([]);\r\n  const [matched, setMatched] = useState([]);\r\n\r\n  const pokemons = [\r\n    { id: 1, name: \"balbasaur\" },\r\n    { id: 8, name: \"wartotle\" },\r\n    { id: 9, name: \"blastoise\" },\r\n    { id: 6, name: \"charizard\" }\r\n  ];\r\n\r\n  //currently there are 4 pokemons but we need the pair\r\n\r\n  const pairOfPokemons = [...pokemons, ...pokemons];\r\n\r\n  function flipCard(index) {\r\n    setOpenedCard((opened) => [...opened, index]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (openedCard < 2) return;\r\n\r\n    const firstMatched = pairOfPokemons[openedCard[0]];\r\n    const secondMatched = pairOfPokemons[openedCard[1]];\r\n\r\n    if (secondMatched && firstMatched.id === secondMatched.id) {\r\n      setMatched([...matched, firstMatched.id]);\r\n    }\r\n\r\n    if (openedCard.length === 2) setTimeout(() => setOpenedCard([]), 1000);\r\n  }, [openedCard]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n\t\t\t\t\t<h1>Rule:</h1>\r\n\t\t\t\t\t<h1>The objective is to collect the most pairs of cards.</h1>\r\n\t\t\t\t\t<h1>When the game starts, Shuffle the cards and lay them on the table, face down, in rows.</h1>\r\n\t\t\t\t\t<h1>On each turn, a player turns over any two cards (one at a time) and keeps them and gain one point if the cards match</h1>\r\n\t\t\t\t\t<h1>When a player turns over two cards that do not match, the game will be over.</h1>\r\n\t\t\t\t\t<h1>The trick is to remember which cards are where.</h1>\r\n\t\t\t\t\t<h1>Rules:</h1>\r\n\t\t\t\t\r\n\t\t\t\t\t<h2>The objective is to collect the most pairs of cards.</h2>\r\n\t\t\t\t\t<h2>When the game starts, Shuffle the cards and lay them on the table, face down, in rows.</h2>\r\n\t\t\t\t\t<h2>On each turn, a player turns over any two cards (one at a time) and keeps them and gain one point if the cards match</h2>\r\n\t\t\t\t\t<h2>When a player turns over two cards that do not match, the game will be over.</h2>\r\n\t\t\t\t\t<h2>The trick is to remember which cards are where.</h2>\r\n\t\t\t\t</div>\r\n      <div className=\"cards\">\r\n        {pairOfPokemons.map((pokemon, index) => {\r\n          //lets flip the card\r\n\r\n          let isFlipped = false;\r\n\r\n          if (openedCard.includes(index)) isFlipped = true;\r\n          if (matched.includes(pokemon.id)) isFlipped = true;\r\n          return (\r\n            <div\r\n              className={`pokemon-card ${isFlipped ? \"flipped\" : \"\"} `}\r\n              key={index}\r\n              onClick={() => flipCard(index)}\r\n            >\r\n              <div className=\"inner\">\r\n                <div className=\"front\">\r\n                  <img\r\n                    src={`${url}/${pokemon.id}.png`}\r\n                    alt=\"pokemon-name\"\r\n                    width=\"100\"\r\n                  />\r\n                </div>\r\n                <div className=\"back\"></div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;","// Import npm packages\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\n\r\n// Import components\r\nimport App from './App.jsx';\r\nimport Game from './Game.jsx'\r\n\r\nconst Routing = () => {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/\" exact component={App} />\r\n        <Route path=\"/game\" component={Game} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\nReactDOM.render(<Routing />, document.getElementById('root'));"],"sourceRoot":""}